[{"E:\\chatGPT_adGenerator\\frontend\\src\\index.js":"1","E:\\chatGPT_adGenerator\\frontend\\src\\App.js":"2","E:\\chatGPT_adGenerator\\frontend\\src\\reportWebVitals.js":"3","E:\\chatGPT_adGenerator\\frontend\\src\\components\\Header.js":"4","E:\\chatGPT_adGenerator\\frontend\\src\\components\\Metrics.js":"5","E:\\chatGPT_adGenerator\\frontend\\src\\components\\Footer.js":"6","E:\\chatGPT_adGenerator\\frontend\\src\\components\\Loader.jsx":"7","E:\\HeroIcons\\src\\index.js":"8","E:\\HeroIcons\\src\\App.js":"9","E:\\HeroIcons\\src\\reportWebVitals.js":"10","E:\\HeroIcons\\src\\components\\Header.js":"11"},{"size":535,"mtime":1675501938624,"results":"12","hashOfConfig":"13"},{"size":255,"mtime":1675674174224,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1675501938769,"results":"15","hashOfConfig":"13"},{"size":10886,"mtime":1675753793884,"results":"16","hashOfConfig":"13"},{"size":2562,"mtime":1675675723987,"results":"17","hashOfConfig":"13"},{"size":6813,"mtime":1675579563529,"results":"18","hashOfConfig":"13"},{"size":190,"mtime":1675674981385,"results":"19","hashOfConfig":"13"},{"size":535,"mtime":1675501938624,"results":"20","hashOfConfig":"21"},{"size":137,"mtime":1676742024020,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1675501938769,"results":"23","hashOfConfig":"21"},{"size":21088,"mtime":1676746887997,"results":"24","hashOfConfig":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"u5pzcr",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ylchx7",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\chatGPT_adGenerator\\frontend\\src\\index.js",[],[],[],"E:\\chatGPT_adGenerator\\frontend\\src\\App.js",[],[],[],"E:\\chatGPT_adGenerator\\frontend\\src\\reportWebVitals.js",[],[],"E:\\chatGPT_adGenerator\\frontend\\src\\components\\Header.js",["61","62","63","64","65"],[],"import { Fragment } from \"react\";\r\nimport { Popover, Transition } from \"@headlessui/react\";\r\nimport { MenuIcon, XIcon } from \"@heroicons/react/outline\";\r\nimport React, { useState } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst navigation = [\r\n  { name: \"Product\", href: \"#\" },\r\n  { name: \"Features\", href: \"#\" },\r\n  { name: \"Marketplace\", href: \"#\" },\r\n  { name: \"Company\", href: \"#\" },\r\n];\r\n\r\nexport default function Header() {\r\n  const [productDescription, setProductDescription] = useState(\"\");\r\n  const [showLoader, setShowLoader] = useState(false);\r\n  const [ads, setAds] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setProductDescription(event.target.value);\r\n  };\r\n\r\n  const copyToClipboard = (text) => {\r\n    navigator.clipboard.writeText(text);\r\n    toast.success(\"Successfully Copied!\");\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setShowLoader(true);\r\n    const response = await fetch(`http://localhost:3000/generate-ad`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ productDescription }),\r\n    });\r\n    \r\n    const data = await response.json();\r\n    setAds(data.ad);\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"relative overflow-hidden\">\r\n        <Popover as=\"header\" className=\"relative\">\r\n          <div className=\"bg-gray-900 pt-6\">\r\n            <nav\r\n              className=\"relative max-w-7xl mx-auto flex items-center justify-between px-4 sm:px-6\"\r\n              aria-label=\"Global\"\r\n            >\r\n              <div className=\"flex items-center flex-1\">\r\n                <div className=\"flex items-center justify-between w-full md:w-auto\">\r\n                  <a href=\"#\">\r\n                    <span className=\"sr-only\">Workflow</span>\r\n                    <img\r\n                      className=\"h-8 w-auto sm:h-10\"\r\n                      src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-500.svg\"\r\n                      alt=\"\"\r\n                    />\r\n                  </a>\r\n                  <div className=\"-mr-2 flex items-center md:hidden\">\r\n                    <Popover.Button className=\"bg-gray-900 rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:bg-gray-800 focus:outline-none focus:ring-2 focus-ring-inset focus:ring-white\">\r\n                      <span className=\"sr-only\">Open main menu</span>\r\n                      <MenuIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n                    </Popover.Button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"hidden space-x-8 md:flex md:ml-10\">\r\n                  {navigation.map((item) => (\r\n                    <a\r\n                      key={item.name}\r\n                      href={item.href}\r\n                      className=\"text-base font-medium text-white hover:text-gray-300\"\r\n                    >\r\n                      {item.name}\r\n                    </a>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"hidden md:flex md:items-center md:space-x-6\">\r\n                <a\r\n                  href=\"#\"\r\n                  className=\"text-base font-medium text-white hover:text-gray-300\"\r\n                >\r\n                  Log in\r\n                </a>\r\n                <a\r\n                  href=\"#\"\r\n                  className=\"inline-flex items-center px-4 py-2 border border-transparent text-base font-medium rounded-md text-white bg-gray-600 hover:bg-gray-700\"\r\n                >\r\n                  Start free trial\r\n                </a>\r\n              </div>\r\n            </nav>\r\n          </div>\r\n\r\n          <Transition\r\n            as={Fragment}\r\n            enter=\"duration-150 ease-out\"\r\n            enterFrom=\"opacity-0 scale-95\"\r\n            enterTo=\"opacity-100 scale-100\"\r\n            leave=\"duration-100 ease-in\"\r\n            leaveFrom=\"opacity-100 scale-100\"\r\n            leaveTo=\"opacity-0 scale-95\"\r\n          >\r\n            <Popover.Panel\r\n              focus\r\n              className=\"absolute top-0 inset-x-0 p-2 transition transform origin-top md:hidden\"\r\n            >\r\n              <div className=\"rounded-lg shadow-md bg-white ring-1 ring-black ring-opacity-5 overflow-hidden\">\r\n                <div className=\"px-5 pt-4 flex items-center justify-between\">\r\n                  <div>\r\n                    <img\r\n                      className=\"h-8 w-auto\"\r\n                      src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\r\n                      alt=\"\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"-mr-2\">\r\n                    <Popover.Button className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-600\">\r\n                      <span className=\"sr-only\">Close menu</span>\r\n                      <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\r\n                    </Popover.Button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"pt-5 pb-6\">\r\n                  <div className=\"px-2 space-y-1\">\r\n                    {navigation.map((item) => (\r\n                      <a\r\n                        key={item.name}\r\n                        href={item.href}\r\n                        className=\"block px-3 py-2 rounded-md text-base font-medium text-gray-900 hover:bg-gray-50\"\r\n                      >\r\n                        {item.name}\r\n                      </a>\r\n                    ))}\r\n                  </div>\r\n                  <div className=\"mt-6 px-5\">\r\n                    <a\r\n                      href=\"#\"\r\n                      className=\"block text-center w-full py-3 px-4 rounded-md shadow bg-indigo-600 text-white font-medium hover:bg-indigo-700\"\r\n                    >\r\n                      Start free trial\r\n                    </a>\r\n                  </div>\r\n                  <div className=\"mt-6 px-5\">\r\n                    <p className=\"text-center text-base font-medium text-gray-500\">\r\n                      Existing customer?{\" \"}\r\n                      <a href=\"#\" className=\"text-gray-900 hover:underline\">\r\n                        Login\r\n                      </a>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Popover.Panel>\r\n          </Transition>\r\n        </Popover>\r\n\r\n        <main className=\"pt-16 mx-auto  px-4 sm:pt-24 bg-gray-900\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-4xl tracking-tight font-extrabold text-gray-100 sm:text-5xl md:text-6xl\">\r\n              <span className=\"block xl:inline\">Create ad titles using</span>{\" \"}\r\n              <span className=\"block text-indigo-600 xl:inline\">\r\n                Artificial intelligence\r\n              </span>\r\n            </h1>\r\n            <p className=\"mt-3 max-w-md mx-auto text-base text-gray-500 sm:text-lg md:mt-5 md:text-xl md:max-w-3xl\">\r\n              Give some product description and AI bot will generate highly\r\n              engaging Advertisement titles for you\r\n            </p>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"max-w-md mx-auto mt-8\">\r\n                <div>\r\n                  <label htmlFor=\"description\" className=\"sr-only\">\r\n                    Description\r\n                  </label>\r\n                  <textarea\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    value={productDescription}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Start typing....\"\r\n                    rows={4}\r\n                    className=\"block bg-gray-800 text-gray-100 w-full border border-blue-gray-300 rounded-md shadow-sm sm:text-sm focus:ring-blue-500 focus:border-blue-500\"\r\n                  />\r\n                </div>\r\n                <div className=\"pt-6 pb-8\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"inline-flex items-center px-5 py-2 border border-transparent text-base font-medium rounded-full shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                  >\r\n                    Generate Results\r\n                  </button>\r\n                </div>\r\n                \r\n              </div>\r\n            </form>\r\n          </div>\r\n\r\n          {/* CARDS */}\r\n          {ads[0] ? (\r\n            <div className=\"relative bg-gray-900 pt-10 pb-20 px-4 sm:px-6 lg:pt-24 lg:pb-28 lg:px-8\">\r\n              <div className=\"absolute inset-0\">\r\n                <div className=\"bg-gray-900 h-1/3 sm:h-2/3\" />\r\n              </div>\r\n              <div className=\"relative max-w-7xl mx-auto\">\r\n                <div className=\"text-center\">\r\n                  <h2 className=\"text-3xl tracking-tight font-extrabold text-gray-100 sm:text-4xl\">\r\n                    Here's the Results\r\n                  </h2>\r\n                  <p className=\"mt-3 max-w-2xl mx-auto text-xl text-gray-500 sm:mt-4\">\r\n                    The results are based on the values provided by user\r\n                  </p>\r\n                </div>\r\n\r\n                <div className=\"mt-12 max-w-lg mx-auto grid gap-5 lg:grid-cols-1 lg:max-w-none\">\r\n                  <div className=\"flex flex-col rounded-lg shadow-lg overflow-hidden\">\r\n                    <div className=\"flex-1 bg-gray-800 p-6 flex flex-col justify-between\">\r\n                      <div className=\"flex-1\">\r\n                        <p className=\"mt-3 text-base text-gray-200\">{ads}</p>\r\n                      </div>\r\n                      <div className=\"mt-6 flex items-center\">\r\n                        <div className=\"flex-shrink-0\">\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => {\r\n                              copyToClipboard(ads);\r\n                            }}\r\n                            className=\"inline-flex items-center px-12 py-1.5 border border-transparent text-xs font-medium rounded-full shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                          >\r\n                            Copy to clipboard\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <ToastContainer />\r\n            </div>\r\n          ) : (\r\n            showLoader && <Loader />\r\n          )}\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","E:\\chatGPT_adGenerator\\frontend\\src\\components\\Metrics.js",[],[],"E:\\chatGPT_adGenerator\\frontend\\src\\components\\Footer.js",[],[],"E:\\chatGPT_adGenerator\\frontend\\src\\components\\Loader.jsx",[],[],"E:\\HeroIcons\\src\\index.js",[],[],"E:\\HeroIcons\\src\\App.js",[],[],"E:\\HeroIcons\\src\\reportWebVitals.js",[],[],"E:\\HeroIcons\\src\\components\\Header.js",["66","67","68","69"],[],{"ruleId":"70","severity":1,"message":"71","line":58,"column":19,"nodeType":"72","endLine":58,"endColumn":31},{"ruleId":"70","severity":1,"message":"71","line":86,"column":17,"nodeType":"72","endLine":89,"endColumn":18},{"ruleId":"70","severity":1,"message":"71","line":92,"column":17,"nodeType":"72","endLine":95,"endColumn":18},{"ruleId":"70","severity":1,"message":"71","line":144,"column":21,"nodeType":"72","endLine":147,"endColumn":22},{"ruleId":"70","severity":1,"message":"71","line":154,"column":23,"nodeType":"72","endLine":154,"endColumn":77},{"ruleId":"73","severity":1,"message":"74","line":1,"column":10,"nodeType":"75","messageId":"76","endLine":1,"endColumn":18},{"ruleId":"73","severity":1,"message":"77","line":2,"column":10,"nodeType":"75","messageId":"76","endLine":2,"endColumn":17},{"ruleId":"73","severity":1,"message":"78","line":2,"column":19,"nodeType":"75","messageId":"76","endLine":2,"endColumn":29},{"ruleId":"73","severity":1,"message":"79","line":235,"column":17,"nodeType":"75","messageId":"76","endLine":235,"endColumn":25},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","'Popover' is defined but never used.","'Transition' is defined but never used.","'useState' is defined but never used."]